openapi: 3.0.0
info:
  title: Utility Module API
  description: API contracts for utility module creation and management
  version: 1.0.0

paths:
  /utility-modules:
    post:
      summary: Create a new utility module
      description: Creates a new utility module with specified functions and configuration
      operationId: createUtilityModule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UtilityModule'
      responses:
        '201':
          description: Utility module created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UtilityModule'
        '400':
          description: Invalid input data
        '409':
          description: Module with this name already exists

  /utility-modules/{moduleName}:
    get:
      summary: Get utility module by name
      description: Retrieves details of a specific utility module
      operationId: getUtilityModule
      parameters:
        - name: moduleName
          in: path
          required: true
          description: Name of the utility module
          schema:
            type: string
      responses:
        '200':
          description: Utility module details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UtilityModule'
        '404':
          description: Utility module not found

    put:
      summary: Update utility module
      description: Updates an existing utility module
      operationId: updateUtilityModule
      parameters:
        - name: moduleName
          in: path
          required: true
          description: Name of the utility module
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UtilityModule'
      responses:
        '200':
          description: Utility module updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UtilityModule'
        '400':
          description: Invalid input data
        '404':
          description: Utility module not found

    delete:
      summary: Delete utility module
      description: Deletes a utility module
      operationId: deleteUtilityModule
      parameters:
        - name: moduleName
          in: path
          required: true
          description: Name of the utility module
          schema:
            type: string
      responses:
        '204':
          description: Utility module deleted successfully
        '404':
          description: Utility module not found

  /utility-modules/{moduleName}/functions:
    post:
      summary: Add function to utility module
      description: Adds a new utility function to an existing module
      operationId: addUtilityFunction
      parameters:
        - name: moduleName
          in: path
          required: true
          description: Name of the utility module
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UtilityFunction'
      responses:
        '201':
          description: Utility function added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UtilityFunction'
        '400':
          description: Invalid input data
        '404':
          description: Utility module not found

  /decorators:
    post:
      summary: Create a new decorator
      description: Creates a new decorator for cross-cutting concerns
      operationId: createDecorator
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Decorator'
      responses:
        '201':
          description: Decorator created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Decorator'
        '400':
          description: Invalid input data
        '409':
          description: Decorator with this name already exists

  /code-duplication-patterns:
    get:
      summary: List code duplication patterns
      description: Retrieves all identified code duplication patterns
      operationId: listCodeDuplicationPatterns
      parameters:
        - name: priority
          in: query
          required: false
          description: Filter by priority level
          schema:
            type: string
            enum: [HIGH, MEDIUM, LOW]
      responses:
        '200':
          description: List of code duplication patterns
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CodeDuplicationPattern'

    post:
      summary: Create code duplication pattern
      description: Creates a new code duplication pattern entry
      operationId: createCodeDuplicationPattern
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeDuplicationPattern'
      responses:
        '201':
          description: Code duplication pattern created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeDuplicationPattern'
        '400':
          description: Invalid input data

  /refactoring-progress:
    get:
      summary: Get refactoring progress
      description: Retrieves current progress of the refactoring process
      operationId: getRefactoringProgress
      responses:
        '200':
          description: Refactoring progress information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefactoringProgress'

components:
  schemas:
    UtilityModule:
      type: object
      required:
        - name
        - description
        - file_path
      properties:
        name:
          type: string
          description: Name of the utility module
          pattern: '^[a-z][a-z0-9_]*$'
        description:
          type: string
          description: Purpose and scope of the module
        functions:
          type: array
          items:
            $ref: '#/components/schemas/UtilityFunction'
          description: List of utility functions in the module
        dependencies:
          type: array
          items:
            type: string
          description: External dependencies required by the module
        file_path:
          type: string
          description: Relative path where the module will be created
          pattern: '^src/[a-z][a-z0-9_/]*\.py$'

    UtilityFunction:
      type: object
      required:
        - name
        - description
        - return_type
        - lines_saved
      properties:
        name:
          type: string
          description: Function name following Python conventions
          pattern: '^[a-z][a-z0-9_]*$'
        description:
          type: string
          description: Purpose and behavior of the function
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/FunctionParameter'
          description: List of function parameters
        return_type:
          type: string
          description: Expected return type
        source_modules:
          type: array
          items:
            type: string
          description: Source code modules where this function will replace duplicated code
        lines_saved:
          type: integer
          minimum: 1
          description: Estimated number of lines of code saved by using this function

    FunctionParameter:
      type: object
      required:
        - name
        - type
      properties:
        name:
          type: string
          description: Parameter name
        type:
          type: string
          description: Parameter type
        default:
          description: Default value for the parameter
        required:
          type: boolean
          default: true
          description: Whether the parameter is required

    Decorator:
      type: object
      required:
        - name
        - description
        - concern
        - implementation_pattern
      properties:
        name:
          type: string
          description: Decorator name
          pattern: '^[a-z][a-z0-9_]*$'
        description:
          type: string
          description: Purpose and behavior of the decorator
        target_functions:
          type: array
          items:
            type: string
          description: Functions that will use this decorator
        concern:
          type: string
          enum: [error_handling, event_reporting, input_validation, retry_logic]
          description: Cross-cutting concern addressed
        implementation_pattern:
          type: string
          enum: [wrapper, context_manager, class_decorator]
          description: Implementation pattern

    CodeDuplicationPattern:
      type: object
      required:
        - pattern_id
        - description
        - lines_affected
        - priority
        - solution_approach
      properties:
        pattern_id:
          type: string
          description: Unique identifier for the pattern
        description:
          type: string
          description: Description of the duplicated code pattern
        locations:
          type: array
          items:
            $ref: '#/components/schemas/CodeLocation'
          description: Files and line ranges where the pattern occurs
        lines_affected:
          type: integer
          minimum: 1
          description: Total number of lines affected by this duplication
        priority:
          type: string
          enum: [HIGH, MEDIUM, LOW]
          description: Priority level
        solution_approach:
          type: string
          description: Approach for eliminating this duplication

    CodeLocation:
      type: object
      required:
        - file_path
        - start_line
        - end_line
      properties:
        file_path:
          type: string
          format: uri
          description: Absolute path to the file
        start_line:
          type: integer
          minimum: 1
          description: Starting line number of the duplicated code
        end_line:
          type: integer
          minimum: 1
          description: Ending line number of the duplicated code
        function_name:
          type: string
          description: Name of the function containing the duplication

    RefactoringProgress:
      type: object
      required:
        - current_phase
        - completion_percentage
        - modules_created
        - decorators_implemented
        - duplication_eliminated
        - tests_updated
      properties:
        current_phase:
          type: string
          enum: [ANALYSIS_COMPLETE, UTILITIES_CREATED, DECORATORS_IMPLEMENTED, DUPLICATION_ELIMINATED, TESTS_UPDATED, VALIDATION_COMPLETE]
          description: Current phase of refactoring
        completion_percentage:
          type: number
          minimum: 0
          maximum: 100
          description: Overall completion percentage
        modules_created:
          type: integer
          minimum: 0
          description: Number of utility modules created
        decorators_implemented:
          type: integer
          minimum: 0
          description: Number of decorators implemented
        duplication_eliminated:
          type: integer
          minimum: 0
          description: Number of duplication patterns eliminated
        tests_updated:
          type: integer
          minimum: 0
          description: Number of test files updated
        last_updated:
          type: string
          format: date-time
          description: When the progress was last updated